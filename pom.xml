<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>com.redpill-linpro.alfresco</groupId>
  <artifactId>alfresco-base</artifactId>
  <version>3.0.3</version>
  <packaging>pom</packaging>

  <name>Redpill Linpro Alfresco Parent POM</name>
  <description>The Parent POM for all RLP based Alfresco projects</description>

  <properties>
    <jacoco.version>0.7.9</jacoco.version>
    <maven.surefire.version>2.20</maven.surefire.version>
    <jacoco.agent.arg/>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <!-- Sonar -->
    <sonar.sources>src/main</sonar.sources>
    <!--<sonar.exclusions>**/*.xml, **/*.css</sonar.exclusions>-->
    <sonar.jacoco.reportPaths>target/jacoco.exec,target/jacoco-ut.exec,target/jacoco-it.exec</sonar.jacoco.reportPaths>
    <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
    <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
    <sonar.coverage.exclusions>
      **/*.css,
      **/*.ftl,
      **/*.xml,
      **/*.js
    </sonar.coverage.exclusions>
    <jacoco.reportPath>${project.build.directory}</jacoco.reportPath>
    <!-- Compile with Java 7, default is 5 -->
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <maven.alfresco.tomcat.port>8765</maven.alfresco.tomcat.port>
    <maven.alfresco.refresh.port>8765</maven.alfresco.refresh.port>
    <!-- Legacy dev profile needs these -->
    <tomcat.host>localhost</tomcat.host>
    <tomcat.port>8080</tomcat.port>
    <alfresco.client.war>alfresco</alfresco.client.war>
  </properties>

  <developers>
    <developer>
      <id>mars</id>
      <name>Marcus Svartmark</name>
      <email>marcus.svartmark (at) redpill-linpro.com</email>
      <organization>Redpill Linpro AB</organization>
      <organizationUrl>http://www.redpill-linpro.com</organizationUrl>
      <roles>
        <role>Founder</role>
        <role>Architect</role>
        <role>Developer</role>
      </roles>
      <timezone>+1</timezone>
    </developer>
    <developer>
      <id>niklas.ekman</id>
      <name>Niklas Ekman</name>
      <email>niklas.ekman (at) redpill-linpro.com</email>
      <organization>Redpill Linpro AB</organization>
      <organizationUrl>http://www.redpill-linpro.com</organizationUrl>
      <roles>
        <role>Founder</role>
        <role>Architect</role>
        <role>Developer</role>
      </roles>
      <timezone>+1</timezone>
    </developer>
  </developers>

  <contributors>
    <contributor/>
  </contributors>

  <scm>
    <connection>scm:git:git@github.com:Redpill-Linpro/alfresco-base.git</connection>
    <developerConnection>scm:git:git@github.com:Redpill-Linpro/alfresco-base.git</developerConnection>
    <url>scm:git:git@github.com:Redpill-Linpro/alfresco-base.git</url>
  </scm>

  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/Redpill-Linpro/alfresco-base/issues</url>
  </issueManagement>

  <repositories>
    <repository>
      <id>redpill-linpro</id>
      <url>https://maven.redpill-linpro.com/nexus/content/groups/public</url>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
      </snapshots>
    </repository>
    <repository>
      <id>alfresco</id>
      <url>https://artifacts.alfresco.com/nexus/content/groups/public</url>
    </repository>
    <repository>
      <id>alfresco-snapshots</id>
      <url>https://artifacts.alfresco.com/nexus/content/groups/public-snapshots</url>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
      </snapshots>
    </repository>
    <repository>
      <id>central-snapshots</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
      </snapshots>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>redpill-linpro</id>
      <url>https://maven.redpill-linpro.com/nexus/content/groups/public</url>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
      </snapshots>
    </pluginRepository>
    <pluginRepository>
      <id>alfresco</id>
      <url>https://artifacts.alfresco.com/nexus/content/groups/public</url>
    </pluginRepository>
    <pluginRepository>
      <id>alfresco-snapshots</id>
      <url>https://artifacts.alfresco.com/nexus/content/groups/public-snapshots</url>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
      </snapshots>
    </pluginRepository>
    <pluginRepository>
      <id>central-snapshots</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>

  <!-- Here we realize the connection with the Alfresco selected platform (e.g.version and edition) -->
  <dependencyManagement>

  </dependencyManagement>

  <build>

  </build>

  <profiles>
    <profile>
      <!-- ############################################### -->
      <!-- profile to copy all code to the exploded tomcat -->
      <!-- ############################################### -->
      <id>dev</id>
      <build>
        <pluginManagement>
          <plugins>
            <!-- ####################################### -->
            <!-- also clean out local jar file in tomcat -->
            <!-- ####################################### -->
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-clean-plugin</artifactId>
              <version>2.5</version>
              <configuration>
                <filesets>
                  <fileset>
                    <directory>
                      ${tomcat.home}/webapps/${alfresco.client.war}/WEB-INF/classes/alfresco/module/${project.artifactId}
                    </directory>
                  </fileset>
                  <fileset>
                    <directory>${tomcat.home}/webapps/${alfresco.client.war}/WEB-INF/lib</directory>
                    <includes>
                      <include>${project.build.finalName}.jar</include>
                    </includes>
                  </fileset>
                </filesets>
              </configuration>
            </plugin>

            <!-- ######################################### -->
            <!-- Copy dependency jar files to local tomcat -->
            <!-- ######################################### -->
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-dependency-plugin</artifactId>
              <executions>
                <execution>
                  <id>hot-copy-dependencies</id>
                  <goals>
                    <goal>copy-dependencies</goal>
                  </goals>
                  <configuration>
                    <outputDirectory>${tomcat.home}/webapps/${alfresco.client.war}/WEB-INF/lib</outputDirectory>
                    <overWriteReleases>false</overWriteReleases>
                    <overWriteSnapshots>false</overWriteSnapshots>
                    <overWriteIfNewer>true</overWriteIfNewer>
                    <includeScope>runtime</includeScope>
                  </configuration>
                </execution>
              </executions>
            </plugin>

            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-resources-plugin</artifactId>
              <version>${maven-resources-plugin.version}</version>
              <executions>
                <execution>
                  <id>hot-copy-resources</id>
                  <goals>
                    <goal>copy-resources</goal>
                  </goals>
                  <configuration>
                    <outputDirectory>${tomcat.home}/webapps/${alfresco.client.war}/WEB-INF/lib</outputDirectory>
                    <resources>
                      <resource>
                        <directory>${project.build.directory}/</directory>
                        <includes>
                          <include>${project.build.finalName}.jar</include>
                        </includes>
                      </resource>
                    </resources>
                  </configuration>
                </execution>

              </executions>

              <configuration>
                <overwrite>true</overwrite>
              </configuration>
            </plugin>

            <plugin>
              <groupId>org.redpill-linpro.alfresco</groupId>
              <artifactId>refreshwebscripts-maven-plugin</artifactId>
              <version>1.0.2</version>
            </plugin>
          </plugins>
        </pluginManagement>

        <plugins>
          <plugin>
            <artifactId>maven-clean-plugin</artifactId>
          </plugin>

          <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>hot-copy-dependencies</id>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
              <execution>
                <id>hot-copy-resources</id>
                <phase>package</phase>
              </execution>
              <execution>
                <id>hot-copy-web-resources</id>
                <phase>package</phase>
              </execution>
              <execution>
                <id>hot-copy-config-resources</id>
                <phase>package</phase>
              </execution>
              <execution>
                <id>hot-copy-jrebel-config</id>
                <phase>package</phase>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.zeroturnaround</groupId>
            <artifactId>jrebel-maven-plugin</artifactId>
          </plugin>

          <plugin>
            <groupId>org.redpill-linpro.alfresco</groupId>
            <artifactId>refreshwebscripts-maven-plugin</artifactId>
            <version>1.0.2</version>
            <executions>
              <execution>
                <id>webscripts</id>
                <phase>package</phase>
                <goals>
                  <goal>refresh</goal>
                </goals>
                <configuration>
                  <url>http://${tomcat.host}:${tomcat.port}/${alfresco.client.war}/service/index</url>
                  <password>admin</password>
                </configuration>
              </execution>
              <execution>
                <id>cache</id>
                <phase>package</phase>
                <goals>
                  <goal>refresh</goal>
                </goals>
                <configuration>
                  <url>http://${tomcat.host}:${tomcat.port}/${alfresco.client.war}/page/caches/dependency/clear</url>
                  <password>admin</password>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- ####################################################################### -->
    <!-- upload profile that uploads the artifact via CMIS to an Alfresco server -->
    <!-- ####################################################################### -->
    <profile>
      <id>upload</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.redpill-linpro.alfresco</groupId>
            <artifactId>artifact-upload-maven-plugin</artifactId>
            <version>1.0.3</version>
            <executions>
              <execution>
                <id>artifact-upload</id>
                <phase>install</phase>
                <goals>
                  <goal>upload</goal>
                </goals>
                <inherited>true</inherited>
              </execution>
            </executions>
            <configuration>
              <username>${artifact-upload.username}</username>
              <password>${artifact-upload.password}</password>
              <site>${artifact-upload.site}</site>
              <url>${artifact-upload.cmis.url}</url>
              <path>${artifact-upload.client.upload.path}</path>
              <overwrite>true</overwrite>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>


    <!-- ########################################################################## -->
    <!-- code coverage profile that enables jacoco which creates nice code coverage -->
    <!-- on integration tests too                                                   -->
    <!-- Currently work in progress and is not working                              -->
    <!-- ########################################################################## -->
    <profile>
      <id>jenkins</id>
      <!-- disable auto activation
      <activation>
        <property>
          <name>env.BUILD_NUMBER</name>
        </property>
      </activation>-->
      <build>
        <plugins>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${maven.surefire.version}</version>
            <configuration>
              <!-- Sets the VM argument line used when unit tests are run. -->
              <argLine>${surefireArgLine}</argLine>
              <!-- Skips unit tests if the value of skip.unit.tests property is true -->
              <skipTests>${skip.unit.tests}</skipTests>
              <forkCount>1</forkCount>
              <runOrder>random</runOrder>
              <!-- Excludes integration tests when unit tests are run.
              <excludes>
                <exclude>**/IT*.java</exclude>
              </excludes>-->
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>2.15</version>
            <executions>

              <!--
                Ensures that both integration-test and verify goals of the Failsafe Maven
                plugin are executed.
              -->
              <execution>
                <id>integration-tests</id>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
                <configuration>
                  <!-- Sets the VM argument line used when integration tests are run. -->
                  <argLine>${failsafeArgLine}</argLine>
                  <!--
                      Skips integration tests if the value of skip.integration.tests property
                      is true
                    -->
                  <skipTests>${skip.integration.tests}</skipTests>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco.version}</version>
            <configuration>
              <append>true</append>
              <excludes>
                <exclude>**/*.acp</exclude>
              </excludes>
            </configuration>
            <executions>
              <execution>
                <id>prepare-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>pre-unit-test</id>
                <phase>initialize</phase>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
                <configuration>
                  <!-- Sets the path to the file which contains the execution data. -->
                  <destFile>${jacoco.reportPath}/jacoco-ut.exec</destFile>
                  <!--
                     Sets the name of the property containing the settings
                     for JaCoCo runtime agent.
                   -->
                  <propertyName>surefireArgLine</propertyName>
                </configuration>
              </execution>

              <execution>
                <id>post-unit-test</id>
                <phase>test</phase>
                <goals>
                  <goal>report</goal>
                </goals>
                <configuration>
                  <!-- Sets the path to the file which contains the execution data. -->
                  <dataFile>${jacoco.reportPath}/jacoco-ut.exec</dataFile>
                  <!-- Sets the output directory for the code coverage report. -->
                  <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                </configuration>
              </execution>

              <!-- The Executions required by unit tests are omitted. -->
              <!--
                  Prepares the property pointing to the JaCoCo runtime agent which
                  is passed as VM argument when Maven the Failsafe plugin is executed.
                -->
              <execution>
                <id>pre-integration-test</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>prepare-agent-integration</goal>
                </goals>
                <configuration>
                  <!-- Sets the path to the file which contains the execution data. -->
                  <destFile>${jacoco.reportPath}/jacoco-it.exec</destFile>
                  <!--
                      Sets the name of the property containing the settings
                      for JaCoCo runtime agent.
                    -->
                  <propertyName>failsafeArgLine</propertyName>
                </configuration>
              </execution>
              <!--
                  Ensures that the code coverage report for integration tests after
                  integration tests have been run.
                -->
              <execution>
                <id>post-integration-test</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>report</goal>
                </goals>
                <configuration>
                  <!-- Sets the path to the file which contains the execution data. -->
                  <dataFile>${jacoco.reportPath}/jacoco-it.exec</dataFile>
                  <!-- Sets the output directory for the code coverage report. -->
                  <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
                </configuration>
              </execution>

              <!--
                        <execution>
                          <id>merge-all-tests</id>
                          <phase>verify</phase>
                          <goals>
                            <goal>merge</goal>
                          </goals>
                          <configuration>
                            <fileSets>
                              <fileSet>
                                <directory>${jacoco.reportPath}</directory>
                                <includes>
                                  <include>*.exec</include>
                                </includes>
                                <excludes>
                                  <exclude>**/*-all.exec</exclude>
                                </excludes>
                              </fileSet>
                            </fileSets>
                            <destFile>${jacoco.reportPath}/jacoco-all.exec</destFile>
                          </configuration>
                        </execution>--> <!--
          <execution>
            <id>report-aggregate</id>
            <phase>verify</phase>
            <goals>
              <goal>report-aggregate</goal>
            </goals>

          </execution>
         
          <execution>
            <id>report-all-tests</id>
            <phase>verify</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${jacoco.reportPath}/jacoco-all.exec</dataFile>
              <outputDirectory>${project.reporting.outputDirectory}</outputDirectory>
            </configuration>
          </execution>-->
              <execution>
                <id>jacoco-site</id>
                <phase>verify</phase>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>

  <distributionManagement>
    <repository>
      <id>redpill-linpro-releases</id>
      <url>https://maven.redpill-linpro.com/nexus/content/repositories/releases</url>
    </repository>
    <snapshotRepository>
      <id>redpill-linpro-snapshots</id>
      <url>https://maven.redpill-linpro.com/nexus/content/repositories/snapshots</url>
    </snapshotRepository>
  </distributionManagement>

</project>
